You have sample bank data for Users and Transactions, in JSON format.

Example Users:

[
	{"id": 1, "username": "user1"},
	{"id": 2, "username": "user2"},
	{"id": 3, "username": "user3"}
]

Example Transactions:

[
	{"id":1, "user_id":1, "amount": 1000},
	{"id":2, "user_id":2, "amount": 5000},
	{"id":3, "user_id":1, "amount": -200},
	{"id":4, "user_id":2, "amount": -4000},
	{"id":5, "user_id":2, "amount": -500},
	{"id":6, "user_id":2, "amount": 3000},
	{"id":7, "user_id":3, "amount": 2000},
	{"id":8, "user_id":3, "amount": 200}
]


Write an efficient algorithm that that will nest the Transaction data within the Users structure, as in the example below.

Desired nested output format:

[
	{
		"user_id": 1,
		"username": "user1",
		"balance": 800,
		"transactions": [
			{
				"transaction_id": 1,
				"amount": 1000
			}, {
				"transaction_id": 3,
				"amount": -200
			}
		]
	},
	{
		"user_id": 2,
		"username": "user2",
		"balance": 3500,
		"transactions": [
			{
				"transaction_id": 2,
				"amount": 5000
			},
			{
				"transaction_id": 4,
				"amount": -4000
			},
			{
				"transaction_id": 5,
				"amount": -500
			},
			{
				"transaction_id": 6,
				"amount": 3000
			}
		]
	},
	{
		"user_id": 3,
		"username": "user3",
		"balance": 2200,
		"transactions": [
			{
				"transaction_id": 7,
				"amount": 2000
			},
			{
				"transaction_id": 8,
				"amount": 200
			}
		]
	}
]
